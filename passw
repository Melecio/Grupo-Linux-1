#!/bin/bash

tam=${#1}
declare -i i=1 # Variable que se usara como contador
dirssh="./ssh"

if [ "$1" = "et" ] ; then
	fin=21
else
	fin=24
fi

# No se si se debe comprobar que todas las maquinas tienen su respectivo
# public key generado, y de no tenerlo, generar uno. No se como hacer
# esto que digo bonito, porque si el passwordless es para root, habria que
# revisar en /root que existe el directorio .ssh/, y para eso necesitamos
# permisos de superusuario

# for j in $(seq 1 $fin) ; do
# 	if ping -c 1 $1$j.ac.labf.usb.ve > /dev/null ; then
# 		su # Aqui se tendria que introducir la contraseÃ±a mil veces
# 		if [ $dirssh -a ] ; then
# 			chmod 700 ./ssh # Hay que darle permisos
# 		echo "$1$j lo tiene"
#		else
# 		ssh-keygen -t rsa
# 		fi
# 	else
# 		echo "$1$j no puede ser accedida"
# 	fi
# done

if [ $tam -eq 1 ] ; then
	case $1 in
	a | e | f | et)
		until [ $i -eq 24 ] ; do
		if ping -c 1 $1$i.ac.labf.usb.ve > /dev/null ; then
			for j in $(seq 1 $fin) ; do
				ssh-copy-id -i ~/.ssh/id_rsa.pub root@$1$j.ac.labf.usb.ve
				# Lo mismo ocurre aqui, habria que introducir la clave de
				# root mil veces
			done
			i=$i+1
		else
			echo "$1$j no puede ser accedida"
		fi
		done
		;;
	*) echo "Salas validas: a, e, f, et" && exit ;;
	esac
else
	echo "Introduzca nombre de sala"
	exit
fi

























