#! /bin/bash
# script tipo -vVh -s[sala] -r[12:20] 

LOG=./DaemonLOG  
date=$(date +"%r  %d/%b/%Y") ### formato de la fecha ### PD: es dificil elegir uno son demasiados! 

final[0]="24"
final[1]="24"
final[2]="24"
final[3]="25"
declare -a salas=(a e f et)
declare -i fk=0
declare -a sala_a
declare -a sala_e
declare -a sala_f
declare -a sala_et

### da valor a las variables 
### PD: se ejecuta cada vez que se reinicie el demonio, no se me ha ocurrido nada mejor :s
for sala in ${salas[*]} ; do
    ### itero a la variable final por el cambio de et ###
    for i in $(seq 1 ${final[$fk]}) ; do
	eval sala_$sala[$(($i-1))]=1
        ### comienza diciendo que todas esta apagadas 
        ### PD: como un exit status 0=prendida 1=apagada
    done
    ### crea el archivo ### PD: solo lo hara la primera vez o si se cambia el log
    if [ ! -a LOG ] ; then
	echo "$sala$i is (off) $date" >> $LOG
    fi
    fk=$fk+1
done

#chmod 644 $LOG ### da permiso de solo lectura ###

while true ; do ### la magia de que sea infinito, o casi ###
    fk=0 
    for sala in ${salas[*]} ; do
 	for i in $(seq 1 ${final[$fk]}) ; do
	    boolean=$(eval echo \${sala_$sala[$(($i-1))]})
	    if ping -c 1 $sala$i.ac.labf.usb.ve 2>>/dev/null >>/dev/null ; then ### si hace ping y la variable dice que esta apagada ###   
		if [ ${boolean} -eq 1 ] ; then					### imprime en nuestro log o viceversa en caso de    ###             
		    eval sala_$sala[$(($i-1))]=0				### que sean iguales nada pasa! mas lindo! :)        ###
		    echo "$sala$i is (on) $date" >> $LOG
		fi
	    else
		if [ ${boolean} -eq 0 ] ; then
		    eval sala_$sala[$(($i-1))]=1
                    echo "$sala$i is (off) $date" >> $LOG
		fi
	    fi
	done
	fk=$fk+1
    done
done